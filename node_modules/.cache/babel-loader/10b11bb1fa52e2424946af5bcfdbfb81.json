{"ast":null,"code":"var _jsxFileName = \"/Users/rubinim/workspace/expense-management-system/src/components/Home/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/login';\nimport './style.css';\nimport { Redirect } from 'react-router-dom';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      isFormSubmit: false\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    let _this$state = this.state,\n        username = _this$state.username,\n        password = _this$state.password;\n    let loginStatus = this.props.loginStatus;\n    console.log(\"render\");\n    return React.createElement(\"form\", {\n      name: \"loginForm\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group-collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"username\",\n      name: \"username\",\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      value: username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), loginStatus && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Success.\", React.createElement(Redirect, {\n      to: \"/employeeList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), \" \"), !loginStatus && this.state.isFormSubmit && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Authentication Failure \"));\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    let _this$state2 = this.state,\n        username = _this$state2.username,\n        password = _this$state2.password;\n    let usernameRegex = /^[a-zA-Z0-9]+([a-zA-Z0-9](_|-| )[a-zA-Z0-9])*[a-zA-Z0-9]+$/;\n\n    if (usernameRegex.test(this.state.username) === false) {\n      alert(\"invalid username\");\n    }\n\n    this.props.login(username, password);\n    this.setState({\n      isFormSubmit: true,\n      username: '',\n      password: ''\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loginStatus: state.login.loginStatus\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(login(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["/Users/rubinim/workspace/expense-management-system/src/components/Home/index.js"],"names":["React","Component","connect","login","Redirect","LoginForm","constructor","props","state","username","password","isFormSubmit","onSubmit","bind","render","loginStatus","console","log","e","setState","target","value","preventDefault","usernameRegex","test","alert","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/login';\nimport './style.css';\nimport {\n  Redirect\n} from 'react-router-dom'\nclass LoginForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username : \"\",\n      password : \"\",\n      isFormSubmit : false,\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    let {username, password} = this.state;\n    let {loginStatus} = this.props;\n    console.log(\"render\")\n    return (\n      <form name=\"loginForm\" onSubmit={this.onSubmit}>\n        <div className=\"form-group-collection\">\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input type=\"username\" name=\"username\" onChange={e => this.setState({username: e.target.value})} value={username}/>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" onChange={e => this.setState({password: e.target.value})} value={password}/>\n          </div>\n        </div>\n\n        <input type=\"submit\" value=\"Login\" />\n        { loginStatus && <div>Success.<Redirect to=\"/employeeList\" /> </div> }\n        {!loginStatus && this.state.isFormSubmit && <div>Authentication Failure </div>}\n        {/* { loginError && <div>{loginError.message}</div> } */} \n      </form>\n    )\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    let { username, password } = this.state;\n    let usernameRegex = /^[a-zA-Z0-9]+([a-zA-Z0-9](_|-| )[a-zA-Z0-9])*[a-zA-Z0-9]+$/;\n    if (usernameRegex.test(this.state.username) === false) {\n      alert(\"invalid username\")\n     \n    } \n    this.props.login(username, password);\n    this.setState({\n      isFormSubmit : true,\n      username: '',\n      password: ''\n    });\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loginStatus: state.login.loginStatus\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (username, password) => dispatch(login(username, password))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);"]},"metadata":{},"sourceType":"module"}