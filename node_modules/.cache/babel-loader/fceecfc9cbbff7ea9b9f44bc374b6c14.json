{"ast":null,"code":"// import { createStore } from \"redux\";\n// import rootReducer from \"./reducers/rootReducer\";\n// // we need to pass the initial state with the new look\n// function configureStore(state = { bgState: {bgColor: \"black\"}, activeState: {activeColor: \"info\"} }) {\n//   return createStore(rootReducer,state);\n// }\n// export default configureStore;\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport reducer from './reducers/rootReducer';\nconst store = createStore(reducer, {}, applyMiddleware(thunk, logger));\nexport default store;","map":{"version":3,"sources":["/Users/rubinim/workspace/expense-management-system/src/store.js"],"names":["createStore","applyMiddleware","thunk","logger","reducer","store"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,MAAMC,KAAK,GAAGL,WAAW,CAACI,OAAD,EAAU,EAAV,EAAcH,eAAe,CAACC,KAAD,EAAQC,MAAR,CAA7B,CAAzB;AACA,eAAeE,KAAf","sourcesContent":["// import { createStore } from \"redux\";\n// import rootReducer from \"./reducers/rootReducer\";\n\n// // we need to pass the initial state with the new look\n// function configureStore(state = { bgState: {bgColor: \"black\"}, activeState: {activeColor: \"info\"} }) {\n//   return createStore(rootReducer,state);\n// }\n// export default configureStore;\n\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport reducer from './reducers/rootReducer';\n\nconst store = createStore(reducer, {}, applyMiddleware(thunk, logger));\nexport default store;"]},"metadata":{},"sourceType":"module"}