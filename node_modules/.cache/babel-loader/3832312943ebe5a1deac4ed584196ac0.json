{"ast":null,"code":"var _jsxFileName = \"/Users/rubinim/workspace/expense-management-system/src/config/routes.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport HomeContainer from '../containers/home_container';\nimport Profile from '../components/Profile';\nimport Settings from '../components/Settings'; // import { store } from '../store';\n\nimport { push } from 'react-router-redux'; // const mapStateToProps = state => {\n//   return {\n//     appLoaded: state.common.appLoaded,\n//     appName: state.common.appName,\n//     currentUser: state.common.currentUser,\n//     redirectTo: state.common.redirectTo\n//   }};\n// const mapDispatchToProps = dispatch => ({\n//   onLoad: (payload, token) =>\n//     dispatch({ type: APP_LOAD, payload, token, skipTracking: true }),\n//   onRedirect: () =>\n//     dispatch({ type: REDIRECT })\n// });\n\nclass App extends React.Component {\n  //   componentWillReceiveProps(nextProps) {\n  //     if (nextProps.redirectTo) {\n  //       // this.context.router.replace(nextProps.redirectTo);\n  //       store.dispatch(push(nextProps.redirectTo));\n  //       this.props.onRedirect();\n  //     }\n  //   }\n  //   componentWillMount() {\n  //     const token = window.localStorage.getItem('jwt');\n  //     if (token) {\n  //       agent.setToken(token);\n  //     }\n  //     this.props.onLoad(token ? agent.Auth.current() : null, token);\n  //   }\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomeContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/settings\",\n      component: Settings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  }\n\n} // App.contextTypes = {\n//   router: PropTypes.object.isRequired\n// };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/rubinim/workspace/expense-management-system/src/config/routes.js"],"names":["React","connect","Route","Switch","HomeContainer","Profile","Settings","push","App","Component","render","mapStateToProps","mapDispatchToProps"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CACA;;AACA,SAASC,IAAT,QAAqB,oBAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEEC,EAAAA,MAAM,GAAG;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEN,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAEE,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ,CADF;AAQH;;AA3B+B,C,CA8BlC;AACA;AACA;;;AAEA,eAAeL,OAAO,CAACU,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CJ,GAA7C,CAAf","sourcesContent":["\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport HomeContainer from '../containers/home_container';\nimport Profile from '../components/Profile';\nimport Settings from '../components/Settings';\n// import { store } from '../store';\nimport { push } from 'react-router-redux';\n\n// const mapStateToProps = state => {\n//   return {\n//     appLoaded: state.common.appLoaded,\n//     appName: state.common.appName,\n//     currentUser: state.common.currentUser,\n//     redirectTo: state.common.redirectTo\n//   }};\n\n// const mapDispatchToProps = dispatch => ({\n//   onLoad: (payload, token) =>\n//     dispatch({ type: APP_LOAD, payload, token, skipTracking: true }),\n//   onRedirect: () =>\n//     dispatch({ type: REDIRECT })\n// });\n\nclass App extends React.Component {\n//   componentWillReceiveProps(nextProps) {\n//     if (nextProps.redirectTo) {\n//       // this.context.router.replace(nextProps.redirectTo);\n//       store.dispatch(push(nextProps.redirectTo));\n//       this.props.onRedirect();\n//     }\n//   }\n\n//   componentWillMount() {\n//     const token = window.localStorage.getItem('jwt');\n//     if (token) {\n//       agent.setToken(token);\n//     }\n\n//     this.props.onLoad(token ? agent.Auth.current() : null, token);\n//   }\n\n  render() {\n      return (\n        <div>\n            <Switch>\n            <Route exact path=\"/\" component={HomeContainer}/>\n            <Route path=\"/settings\" component={Settings} />\n            </Switch>\n        </div>\n      );\n  }\n}\n\n// App.contextTypes = {\n//   router: PropTypes.object.isRequired\n// };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}