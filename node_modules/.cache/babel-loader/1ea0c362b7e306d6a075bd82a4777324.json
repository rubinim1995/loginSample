{"ast":null,"code":"var _jsxFileName = \"/Users/rubinim/workspace/expense-management-system/src/components/Home/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/login';\nimport './LoginForm.css';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    let _this$state = this.state,\n        username = _this$state.username,\n        password = _this$state.password;\n    let loginStatus = this.props.loginStatus;\n    return React.createElement(\"form\", {\n      name: \"loginForm\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group-collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"username\",\n      name: \"username\",\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      value: username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), loginStatus && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Success.\"), !loginStatus && this.state.username && this.state.password && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"invalid Username and password \"));\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    let _this$state2 = this.state,\n        username = _this$state2.username,\n        password = _this$state2.password;\n    console.log(\"kdjfkdjkfjdk\", username, password);\n    this.props.login(username, password);\n    this.setState({\n      username: '',\n      password: ''\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    // isLoginPending: state.isLoginPending,\n    // isLoginSuccess: state.isLoginSuccess,\n    // loginError: state.loginError\n    loginStatus: state.login.loginStatus\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (username, password) => dispatch(login(username, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["/Users/rubinim/workspace/expense-management-system/src/components/Home/index.js"],"names":["React","Component","connect","login","LoginForm","constructor","props","state","username","password","onSubmit","bind","render","loginStatus","e","setState","target","value","preventDefault","console","log","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/login';\nimport './LoginForm.css';\n\nclass LoginForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username : \"\",\n      password : \"\",\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    let {username, password} = this.state;\n    let {loginStatus} = this.props;\n    return (\n      <form name=\"loginForm\" onSubmit={this.onSubmit}>\n        <div className=\"form-group-collection\">\n          <div className=\"form-group\">\n            <label>Username</label>\n            <input type=\"username\" name=\"username\" onChange={e => this.setState({username: e.target.value})} value={username}/>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" onChange={e => this.setState({password: e.target.value})} value={password}/>\n          </div>\n        </div>\n\n        <input type=\"submit\" value=\"Login\" />\n        { loginStatus && <div>Success.</div> }\n        {!loginStatus && this.state.username && this.state.password && <div>invalid Username and password </div>}\n        {/* { loginError && <div>{loginError.message}</div> } */} \n      </form>\n    )\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    let { username, password } = this.state;\n    console.log(\"kdjfkdjkfjdk\",username,password)\n    this.props.login(username, password);\n    this.setState({\n      username: '',\n      password: ''\n    });\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // isLoginPending: state.isLoginPending,\n    // isLoginSuccess: state.isLoginSuccess,\n    // loginError: state.loginError\n    loginStatus: state.login.loginStatus\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (username, password) => dispatch(login(username, password))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);"]},"metadata":{},"sourceType":"module"}