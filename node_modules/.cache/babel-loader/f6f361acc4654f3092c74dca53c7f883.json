{"ast":null,"code":"import _objectSpread from \"/Users/rubinim/workspace/expense-management-system/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// export default function reducer(state = {\n//     isLoginSuccess: false,\n//     isLoginPending: false,\n//     loginError: null\n//   }, action) {\n//     switch (action.type) {\n//       case LOGIN:\n//         return Object.assign({}, state, {\n//           isLoginPending: action.isLoginPending\n//         });\n//       case SET_LOGIN_SUCCESS:\n//         return Object.assign({}, state, {\n//           isLoginSuccess: action.isLoginSuccess\n//         });\n//       case SET_LOGIN_ERROR:\n//         return Object.assign({}, state, {\n//           loginError: action.loginError\n//         });\n//       default:\n//         return state;\n//     }\n//   }\nconst initialState = {\n  loginStatus: false\n};\nexport default function login(state = initialState, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return _objectSpread({}, state, {\n        loginStatus: action.loginStatus\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/rubinim/workspace/expense-management-system/src/reducers/login.js"],"names":["initialState","loginStatus","login","state","action","type"],"mappings":";AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAG;AADK,CAArB;AAIA,eAAe,SAASC,KAAT,CAAeC,KAAK,GAAGH,YAAvB,EAAqCI,MAArC,EAA6C;AACzD,UAAQA,MAAM,CAACC,IAAf;AAEC,SAAK,OAAL;AACE,+BACKF,KADL;AAEEF,QAAAA,WAAW,EAAEG,MAAM,CAACH;AAFtB;;AAIJ;AACI,aAAOE,KAAP;AARH;AAUF","sourcesContent":["\n\n\n\n\n\n// export default function reducer(state = {\n//     isLoginSuccess: false,\n//     isLoginPending: false,\n//     loginError: null\n//   }, action) {\n//     switch (action.type) {\n//       case LOGIN:\n//         return Object.assign({}, state, {\n//           isLoginPending: action.isLoginPending\n//         });\n  \n//       case SET_LOGIN_SUCCESS:\n//         return Object.assign({}, state, {\n//           isLoginSuccess: action.isLoginSuccess\n//         });\n  \n//       case SET_LOGIN_ERROR:\n//         return Object.assign({}, state, {\n//           loginError: action.loginError\n//         });\n  \n//       default:\n//         return state;\n//     }\n//   }\n\n  \n\nconst initialState = {\n  loginStatus : false\n};\n\nexport default function login(state = initialState, action) {\n   switch (action.type) {\n   \n    case 'LOGIN':\n      return {\n        ...state,\n        loginStatus: action.loginStatus\n      };\n  default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}